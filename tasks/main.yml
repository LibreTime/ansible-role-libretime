---
- name: include distribution specific vars
  include_vars: "{{ ansible_distribution_release }}.yml"

- name: exploding root_url
  set_fact:
    root_url_split: "{{ libretime_root_url | urlsplit }}"

- name: handling required fields for root_url
  set_fact:
    root_url_scheme: "{{ root_url_split.scheme }}"
    root_url_host: "{{ root_url_split.hostname }}"
    root_url_port: "{{ root_url_split.port | default(443 if root_url_split.scheme == 'https' else 80, true) }}"
    root_url_path: "{{ root_url_split.path | regex_replace('\\/$', '') }}/"

- name: validate root_url
  assert:
    that:
      - root_url_scheme in ('http', 'https')
      - root_url_host | length > 0
      - root_url_port | length > 0
      - root_url_path | length > 0
    fail_msg: libretime_root_url '{{ libretime_root_url }}' is invalid!

- name: install dependencies
  apt:
    state: present
    name: [git, make]
    update_cache: yes

- name: checkout repository
  git:
    repo: "{{ libretime_checkout_url }}"
    dest: "{{ libretime_checkout_dest }}"
    version: "{{ libretime_checkout_version }}"

- name: build VERSION file
  command: make -C {{ libretime_checkout_dest }} VERSION
  args:
    creates: "{{ libretime_checkout_dest }}/VERSION"

- name: add libretime ppa
  apt_repository:
    repo: ppa:libretime/libretime
  when: ansible_distribution == "Ubuntu"
  register: libretime_ppa

- name: update apt cache
  apt:
    update_cache: yes
  when: libretime_ppa is changed

- import_tasks: postgresql.yml
  when: libretime_postgresql_install

- import_tasks: rabbitmq.yml
  when: libretime_rabbitmq_install

- import_tasks: icecast.yml
  when: libretime_icecast_install

- import_tasks: liquidsoap.yml
  when: libretime_liquidsoap_install

- import_tasks: apache.yml

- name: create {{ libretime_user }} user
  user:
    name: "{{ libretime_user }}"
    system: true
    createhome: false
    home: "{{ libretime_home }}"
  when: libretime_user != __default_web_user

- name: create directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    state: directory
    mode: 0755
  with_items:
    - path: "{{ libretime_home }}"
      owner: "{{ libretime_user }}"
      group: "{{ libretime_user }}"
    - path: "{{ libretime_log_dir }}"
      owner: "{{ libretime_user }}"
      group: "{{ libretime_user }}"
    - path: "{{ libretime_config_dir }}"
      # TODO: Config dir should not be writable, but liquidsoap writes to this dir.
      owner: "{{ libretime_user }}"
      group: "{{ libretime_user }}"

- name: deploy configuration file
  template:
    src: libretime/config.ini.j2
    dest: "{{ libretime_config_filepath }}"
    owner: "{{ libretime_user }}"
    group: "{{ libretime_user }}"
    mode: 0640
    backup: true
  notify:
    - restart libretime-analyzer
    - restart libretime-api
    - restart libretime-playout
    - restart libretime-liquidsoap
    - restart libretime-celery

- name: install python3
  apt:
    state: present
    name: [python3, python3-pip]

- import_tasks: shared.yml
  when: >
    libretime_api_install or
    libretime_worker_install or
    libretime_analyzer_install or
    libretime_playout_install

- import_tasks: api_client.yml
  when: >
    libretime_api_install or
    libretime_worker_install or
    libretime_analyzer_install or
    libretime_playout_install

- import_tasks: api.yml
  when: libretime_api_install

- import_tasks: worker.yml
  when: libretime_worker_install

- import_tasks: analyzer.yml
  when: libretime_analyzer_install

- import_tasks: playout.yml
  when: libretime_playout_install

- import_tasks: legacy.yml
  when: libretime_legacy_install

- import_tasks: setup.yml
  when: libretime_setup
