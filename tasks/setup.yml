---
- name: create storage dir
  ansible.builtin.file:
    path: "{{ libretime_storage_dir }}"
    owner: "{{ libretime_user }}"
    group: "{{ libretime_user }}"
    state: directory
    recurse: true
    mode: 0755

- name: restore postgresql dump
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    db: "{{ libretime_postgresql_name }}"
    login_host: "{{ libretime_postgresql_host }}"
    login_port: "{{ libretime_postgresql_port }}"
    login_user: "{{ libretime_postgresql_user }}"
    login_password: "{{ libretime_postgresql_password }}"
    state: restore
    target: "{{ libretime_postgresql_restore_dump }}"
  when: not database_migrated and libretime_postgresql_restore_dump is defined

- name: run legacy database migration
  become: true
  become_user: postgres
  block:
    - name: initial database schema
      community.postgresql.postgresql_script:
        db: "{{ libretime_postgresql_name }}"
        login_host: "{{ libretime_postgresql_host }}"
        login_port: "{{ libretime_postgresql_port }}"
        login_user: "{{ libretime_postgresql_user }}"
        login_password: "{{ libretime_postgresql_password }}"
        path: "{{ libretime_checkout_dest }}/legacy/build/sql/{{ item }}"
        encoding: UTF-8
      with_items:
        - schema.sql
        - defaultdata.sql

    - name: set storage path
      community.postgresql.postgresql_query:
        db: "{{ libretime_postgresql_name }}"
        login_host: "{{ libretime_postgresql_host }}"
        login_port: "{{ libretime_postgresql_port }}"
        login_user: "{{ libretime_postgresql_user }}"
        login_password: "{{ libretime_postgresql_password }}"
        query: >
          INSERT INTO cc_music_dirs (directory, type)
          VALUES (%s, %s)
        positional_args:
          - "{{ libretime_storage_dir | regex_replace('\\/$', '') }}/" # Trailing slash is required
          - "stor"

    - name: set cors url
      community.postgresql.postgresql_query:
        db: "{{ libretime_postgresql_name }}"
        login_host: "{{ libretime_postgresql_host }}"
        login_port: "{{ libretime_postgresql_port }}"
        login_user: "{{ libretime_postgresql_user }}"
        login_password: "{{ libretime_postgresql_password }}"
        query: >
          INSERT INTO cc_pref (keystr, valstr)
          VALUES ('allowed_cors_urls', %s )
        positional_args:
          - "{{ libretime_public_url }}"

    - name: set default icecast password
      community.postgresql.postgresql_query:
        db: "{{ libretime_postgresql_name }}"
        login_host: "{{ libretime_postgresql_host }}"
        login_port: "{{ libretime_postgresql_port }}"
        login_user: "{{ libretime_postgresql_user }}"
        login_password: "{{ libretime_postgresql_password }}"
        query: >
          INSERT INTO cc_pref (keystr, valstr)
          VALUES ('default_icecast_password', %s )
        positional_args:
          - "{{ libretime_icecast_source_password }}"

    - name: set initial icecast admin passwords
      community.postgresql.postgresql_query:
        db: "{{ libretime_postgresql_name }}"
        login_host: "{{ libretime_postgresql_host }}"
        login_port: "{{ libretime_postgresql_port }}"
        login_user: "{{ libretime_postgresql_user }}"
        login_password: "{{ libretime_postgresql_password }}"
        query: >
          UPDATE cc_stream_setting
          SET value = %s
          WHERE keyname = %s
        positional_args:
          - "{{ libretime_icecast_admin_password }}"
          - "{{ item }}_admin_pass"
      with_items: ["s1", "s2", "s3", "s4"]

    - name: set initial icecast source passwords
      community.postgresql.postgresql_query:
        db: "{{ libretime_postgresql_name }}"
        login_host: "{{ libretime_postgresql_host }}"
        login_port: "{{ libretime_postgresql_port }}"
        login_user: "{{ libretime_postgresql_user }}"
        login_password: "{{ libretime_postgresql_password }}"
        query: >
          UPDATE cc_stream_setting
          SET value = %s
          WHERE keyname = %s
        positional_args:
          - "{{ libretime_icecast_source_password }}"
          - "{{ item }}_pass"
      with_items: ["s1", "s2", "s3", "s4"]

  when: not database_migrated and libretime_postgresql_restore_dump is not defined
