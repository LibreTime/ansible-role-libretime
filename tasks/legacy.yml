---
- name: Install legacy dependencies
  ansible.builtin.import_tasks: _dependencies.yml
  vars:
    packages_path: "{{ libretime_checkout_dest }}/legacy"

- name: Deploy legacy php-fpm config
  ansible.builtin.template:
    src: php-fpm/libretime-legacy.conf.j2
    dest: "/etc/php/{{ __php_default_version }}/fpm/pool.d/libretime-legacy.conf"
    owner: root
    group: root
    mode: 0644
  notify: Restart php-fpm

- name: Assert composer is installed
  ansible.builtin.stat:
    path: /usr/local/bin/composer
  register: composer

- name: Install composer
  when: not composer.stat.exists or not composer.stat.executable
  block:
    - name: Install composer dependencies
      ansible.builtin.apt:
        state: present
        name: [unzip]

    - name: Get composer installer signature
      ansible.builtin.uri:
        url: https://composer.github.io/installer.sig
        return_content: true
      register: composer_installer_signature

    - name: Download composer installer
      ansible.builtin.get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-installer.php
        mode: 0755
        checksum: "sha384:{{ composer_installer_signature.content }}"

    - name: Run composer installer # noqa no-changed-when no-free-form
      ansible.builtin.command: >
        php /tmp/composer-installer.php
          --install-dir=/usr/local/bin
          --filename=composer

- name: Clean legacy web root directory # noqa no-handler
  ansible.builtin.file:
    path: "{{ libretime_legacy_web_root }}"
    state: absent
  when: libretime_checkout is changed

- name: Create legacy web root directory # noqa command-instead-of-module
  ansible.builtin.file:
    path: "{{ libretime_legacy_web_root }}"
    owner: "{{ libretime_user }}"
    group: "{{ libretime_user }}"
    state: directory
    mode: 0755

- name: Copy legacy files in the web root
  ansible.builtin.copy:
    src: "{{ libretime_checkout_dest }}/legacy/"
    dest: "{{ libretime_legacy_web_root }}"
    owner: "{{ libretime_user }}"
    group: "{{ libretime_user }}"
    remote_src: true

- name: Build legacy
  become: true
  become_user: "{{ libretime_user }}"
  ansible.builtin.command: make -C {{ libretime_legacy_web_root }} build
  args:
    creates: "{{ libretime_legacy_web_root }}/vendor"

- name: Copy VERSION file in the web root
  ansible.builtin.copy:
    src: "{{ libretime_checkout_dest }}/VERSION"
    dest: "{{ libretime_legacy_web_root }}"
    owner: "{{ libretime_user }}"
    group: "{{ libretime_user }}"
    remote_src: true

- name: Deploy legacy logrotate config
  ansible.builtin.template:
    src: logrotate/libretime-legacy.conf.j2
    dest: /etc/logrotate.d/libretime-legacy
    owner: root
    group: root
    mode: 0644
