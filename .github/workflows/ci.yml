name: CI

on:
  push:
    tags: ["v*.*.*"]
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: make install
      - run: make lint

  test:
    if: >
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - ubuntu:focal
          - debian:bullseye

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.image }}
      cancel-in-progress: true

    steps:
      - name: Install podman
        run: |
          REPO_URL="http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_22.04/"
          REPO_KEY_URL="http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_22.04/Release.key"
          REPO_KEY_FILE="/etc/apt/keyrings/podman.gpg"
          REPO_FILE="/etc/apt/sources.list.d/podman.list"

          sudo mkdir -p "$(dirname "$REPO_KEY_FILE")"
          curl -fsSL "$REPO_KEY_URL" | sudo gpg --dearmor -o "$REPO_KEY_FILE"
          echo "deb [arch=amd64 signed-by=$REPO_KEY_FILE] $REPO_URL /" | sudo tee "$REPO_FILE"

          sudo apt-get -q update
          sudo apt-get -q install -y podman fuse-overlayfs

          podman info
        env:
          DEBIAN_FRONTEND: noninteractive

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v4
        with:
          path: |
            ~/.ansible/collections
            ~/.ansible/roles
          key: ${{ runner.os }}-ansible-${{ hashFiles('**/requirements.yml') }}

      - run: make install
      - run: make test
        env:
          PY_COLORS: true
          ANSIBLE_FORCE_COLOR: true
          MOLECULE_IMAGE: ${{ matrix.image }}
